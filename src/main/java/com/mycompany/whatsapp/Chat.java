/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.whatsapp;

import java.awt.Image;
import java.awt.Toolkit;
import java.util.Date;
import java.util.LinkedList;
import javax.swing.DefaultListModel;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import org.json.simple.JSONObject;

/**
 *
 * @author togae
 */
public class Chat extends javax.swing.JFrame {

    private String nombre;

    /**
     * Creates new form Chat String.valueOf(jListContactos.getSelectedValue())
     */
    public Chat() {
        initComponents();
        this.setLocationRelativeTo(this);
        setImagenRegresar();
        setImagenEnviar();
        setImagenEleminarTodo();
        setImagenBuscar();
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/Imagenes/Icon.png")));
    }

    public Chat(String nombre) {
        this.nombre = nombre;
        initComponents();
        this.setLocationRelativeTo(this);
        setMensajes();
        setFotoButtonContacto();
        setImagenRegresar();
        setImagenEnviar();
        setImagenEleminarTodo();
        setImagenBuscar();
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/Imagenes/Icon.png")));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonSalida = new javax.swing.JButton();
        jButtonRegresar = new javax.swing.JButton();
        jButtonBuscar = new javax.swing.JButton();
        jButtonEleminarTodo = new javax.swing.JButton();
        jButtonContacto = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListMensajes = new javax.swing.JList<>();
        jTextFieldMensaje = new javax.swing.JTextField();
        jButtonEnviar = new javax.swing.JButton();
        jLabelListaMensajes = new javax.swing.JLabel();
        jLabelFondo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButtonSalida.setBackground(new java.awt.Color(0, 0, 0));
        jButtonSalida.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 14)); // NOI18N
        jButtonSalida.setForeground(new java.awt.Color(255, 255, 255));
        jButtonSalida.setText("X");
        jButtonSalida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalidaActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonSalida, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 10, 70, 50));

        jButtonRegresar.setBackground(new java.awt.Color(51, 51, 51));
        jButtonRegresar.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 14)); // NOI18N
        jButtonRegresar.setForeground(new java.awt.Color(255, 255, 255));
        jButtonRegresar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonRegresarMouseClicked(evt);
            }
        });
        jButtonRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRegresarActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonRegresar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 50, 50));

        jButtonBuscar.setBackground(new java.awt.Color(51, 51, 51));
        jButtonBuscar.setForeground(new java.awt.Color(60, 63, 65));
        jButtonBuscar.setFocusCycleRoot(true);
        jButtonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscarActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 10, 60, 50));

        jButtonEleminarTodo.setBackground(new java.awt.Color(51, 51, 51));
        jButtonEleminarTodo.setForeground(new java.awt.Color(60, 63, 65));
        jButtonEleminarTodo.setFocusCycleRoot(true);
        jButtonEleminarTodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEleminarTodoActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonEleminarTodo, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 10, 60, 50));

        jButtonContacto.setBackground(new java.awt.Color(51, 51, 51));
        jButtonContacto.setForeground(new java.awt.Color(60, 63, 65));
        jButtonContacto.setFocusCycleRoot(true);
        jButtonContacto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonContactoActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonContacto, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 10, 60, 50));

        jListMensajes.setBackground(new java.awt.Color(51, 51, 51));
        jListMensajes.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(51, 51, 51), new java.awt.Color(51, 51, 51), new java.awt.Color(102, 102, 102), new java.awt.Color(102, 102, 102)));
        jListMensajes.setFont(new java.awt.Font("Century Gothic", 3, 18)); // NOI18N
        jListMensajes.setForeground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setViewportView(jListMensajes);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 120, 350, 440));

        jTextFieldMensaje.setBackground(new java.awt.Color(51, 51, 51));
        jTextFieldMensaje.setFont(new java.awt.Font("Century Gothic", 3, 18)); // NOI18N
        jTextFieldMensaje.setForeground(new java.awt.Color(255, 255, 255));
        jTextFieldMensaje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldMensajeActionPerformed(evt);
            }
        });
        getContentPane().add(jTextFieldMensaje, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 590, 290, 50));

        jButtonEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEnviarActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonEnviar, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 590, 50, 50));

        jLabelListaMensajes.setFont(new java.awt.Font("Bodoni MT Black", 3, 48)); // NOI18N
        jLabelListaMensajes.setForeground(new java.awt.Color(255, 255, 255));
        jLabelListaMensajes.setText("Mensajes:");
        getContentPane().add(jLabelListaMensajes, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 60, 300, -1));

        jLabelFondo.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabelFondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/FondoNegro.gif"))); // NOI18N
        jLabelFondo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.gray, java.awt.Color.gray, java.awt.Color.black, java.awt.Color.black));
        getContentPane().add(jLabelFondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 418, 696));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSalidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalidaActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButtonSalidaActionPerformed

    private void jButtonContactoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonContactoActionPerformed
        Contactos c = new Contactos();
        c.BuscarContactoJson(nombre);
        JOptionPane.showMessageDialog(null, c.toString());
    }//GEN-LAST:event_jButtonContactoActionPerformed

    private void jButtonRegresarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonRegresarMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonRegresarMouseClicked

    private void jButtonRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRegresarActionPerformed
        this.setVisible(false);
        Menu m = new Menu();
        m.setVisible(true);
    }//GEN-LAST:event_jButtonRegresarActionPerformed

    private void jTextFieldMensajeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldMensajeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldMensajeActionPerformed

    private void jButtonEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEnviarActionPerformed
        if (!jTextFieldMensaje.getText().isEmpty()) {
            Date fecha = new Date();
            Usuario u = new Usuario();
            Contactos c = new Contactos();
            c.BuscarContactoJson(nombre);
            StringBuilder idM = new StringBuilder();
            idM.append(c.getIdMensajes());
            idM.deleteCharAt(0);
            idM.deleteCharAt(idM.length() - 1);
            String id = String.valueOf(idM);
            Encriptacion e = new Encriptacion();
            int s = (int) (1 * (2 + Math.random()));
            if (s == 1) {
                Mensajes m = new Mensajes(u.getNombreUsuario(), id, e.Encriptamiento(jTextFieldMensaje.getText()), fecha.toString(), false);
            } else {
                StringBuilder C = new StringBuilder();
                C.append(c.getNombreContacto());
                C.deleteCharAt(0);
                C.deleteCharAt(C.length() - 1);
                String nombre = String.valueOf(C);
                Mensajes m = new Mensajes(u.getNombreUsuario(), id, e.Encriptamiento(jTextFieldMensaje.getText()), fecha.toString(), false);
                Bot b = new Bot(nombre, jTextFieldMensaje.getText(), id);
            }
            setMensajes();
            jTextFieldMensaje.setText("");
        } else {
            JOptionPane.showMessageDialog(null, "Primero digite un Mensaje!!");
        }
    }//GEN-LAST:event_jButtonEnviarActionPerformed

    private void jButtonEleminarTodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEleminarTodoActionPerformed
        Contactos c = new Contactos();
        c.BuscarContactoJson(nombre);
        StringBuilder idM = new StringBuilder();
        idM.append(c.getIdMensajes());
        idM.deleteCharAt(0);
        idM.deleteCharAt(idM.length() - 1);
        String id = String.valueOf(idM);
        Mensajes m = new Mensajes();
        m.Reset(id);
        setMensajes();
    }//GEN-LAST:event_jButtonEleminarTodoActionPerformed

    private void jButtonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscarActionPerformed
        DefaultListModel<String> listaBusqueda = new DefaultListModel<>();
        Contactos c = new Contactos();
        c.BuscarContactoJson(nombre);
        StringBuilder idM = new StringBuilder();
        idM.append(c.getIdMensajes());
        idM.deleteCharAt(0);
        idM.deleteCharAt(idM.length() - 1);
        String id = String.valueOf(idM);
        Mensajes m = new Mensajes(id);
        LinkedList<String> mensajes = m.getListaMensajesJson();
        int s = mensajes.size();
        String b = JOptionPane.showInputDialog(null, "Digite algo que tengo algun mensaje:");
        for (int i = 0; i < s; i++) {
            if (mensajes.getFirst().contains(b)) {
                System.out.println(mensajes.getFirst());
                listaBusqueda.addElement(mensajes.getFirst());
            }
            mensajes.removeFirst();
        }
        jListMensajes.setModel(listaBusqueda);
        this.repaint();
    }//GEN-LAST:event_jButtonBuscarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Chat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Chat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Chat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Chat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Chat().setVisible(true);
            }
        });
    }

    public void setImagenRegresar() {
        ImageIcon foto = new ImageIcon("src/main/resources/Imagenes/Regresar.png");
        Icon icon = new ImageIcon(foto.getImage().getScaledInstance(jButtonRegresar.getWidth(), jButtonRegresar.getHeight(), Image.SCALE_DEFAULT));
        jButtonRegresar.setIcon(icon);
        jButtonRegresar.setFocusPainted(false);
        jButtonRegresar.setBorderPainted(false);
        jButtonRegresar.setContentAreaFilled(false);
        this.repaint();
    }

    public void setImagenEnviar() {
        ImageIcon foto = new ImageIcon("src/main/resources/Imagenes/enviarMensaje.png");
        Icon icon = new ImageIcon(foto.getImage().getScaledInstance(jButtonEnviar.getWidth(), jButtonEnviar.getHeight(), Image.SCALE_DEFAULT));
        jButtonEnviar.setIcon(icon);
        jButtonEnviar.setFocusPainted(false);
        jButtonEnviar.setBorderPainted(false);
        jButtonEnviar.setContentAreaFilled(false);
        this.repaint();
    }

    public void setFotoButtonContacto() {
        Contactos c = new Contactos();
        c.BuscarContactoJson(nombre);
        Boolean sexo = c.getSexo();
        ImageIcon foto;
        if (sexo) {
            foto = new ImageIcon("src/main/resources/Imagenes/mujerU.png");
        } else {
            foto = new ImageIcon("src/main/resources/Imagenes/hombreU.png");
        }
        Icon icon = new ImageIcon(foto.getImage().getScaledInstance(jButtonContacto.getWidth(), jButtonContacto.getHeight(), Image.SCALE_DEFAULT));
        jButtonContacto.setIcon(icon);
        jButtonContacto.setFocusPainted(false);
        jButtonContacto.setBorderPainted(false);
        jButtonContacto.setContentAreaFilled(false);
        this.repaint();
    }

    public void setImagenEleminarTodo() {
        ImageIcon foto = new ImageIcon("src/main/resources/Imagenes/eleminar.png");
        Icon icon = new ImageIcon(foto.getImage().getScaledInstance(jButtonEleminarTodo.getWidth(), jButtonEleminarTodo.getHeight(), Image.SCALE_DEFAULT));
        jButtonEleminarTodo.setIcon(icon);
        jButtonEleminarTodo.setFocusPainted(false);
        jButtonEleminarTodo.setBorderPainted(false);
        jButtonEleminarTodo.setContentAreaFilled(false);
        this.repaint();
    }
    
    public void setImagenBuscar() {
        ImageIcon foto = new ImageIcon("src/main/resources/Imagenes/buscar.png");
        Icon icon = new ImageIcon(foto.getImage().getScaledInstance(jButtonBuscar.getWidth(), jButtonBuscar.getHeight(), Image.SCALE_DEFAULT));
        jButtonBuscar.setIcon(icon);
        jButtonBuscar.setFocusPainted(false);
        jButtonBuscar.setBorderPainted(false);
        jButtonBuscar.setContentAreaFilled(false);
        this.repaint();
    }

    public void setMensajes() {
        DefaultListModel<String> modelo = new DefaultListModel<>();
        Contactos c = new Contactos();
        c.BuscarContactoJson(nombre);
        StringBuilder idM = new StringBuilder();
        idM.append(c.getIdMensajes());
        idM.deleteCharAt(0);
        idM.deleteCharAt(idM.length() - 1);
        String id = String.valueOf(idM);
        Mensajes m = new Mensajes(id);
        LinkedList<String> mensajes = m.getListaMensajesJson();
        int s = mensajes.size();
        for (int i = 0; i < s; i++) {
            modelo.addElement(mensajes.getFirst());
            mensajes.removeFirst();
        }
        jListMensajes.setModel(modelo);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonBuscar;
    private javax.swing.JButton jButtonContacto;
    private javax.swing.JButton jButtonEleminarTodo;
    private javax.swing.JButton jButtonEnviar;
    private javax.swing.JButton jButtonRegresar;
    private javax.swing.JButton jButtonSalida;
    private javax.swing.JLabel jLabelFondo;
    private javax.swing.JLabel jLabelListaMensajes;
    private javax.swing.JList<String> jListMensajes;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextFieldMensaje;
    // End of variables declaration//GEN-END:variables
}
